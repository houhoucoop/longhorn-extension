name: Build Extension Charts on PR Merge

on:
  push:
    branches:
      - 'release-*'
      - 'main'

permissions:
  contents: write

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' pkg/longhorn/package.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  build-extension-charts:
    needs: extract-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node & Yarn
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.0

      - name: Build Helm charts
        run: |
          yarn publish-pkgs -s ${{ github.repository }} -b gh-pages-dev -t longhorn-${{ needs.extract-version.outputs.version }}

      - name: Upload charts artifact
        uses: actions/upload-artifact@v4
        with:
          name: charts
          path: tmp

  release:
    needs:
      - extract-version
      - build-extension-charts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages-dev exists
        run: |
          if git ls-remote --exit-code --heads origin gh-pages-dev; then
            git fetch origin gh-pages-dev
            git checkout -B gh-pages-dev origin/gh-pages-dev
          else
            git checkout --orphan gh-pages-dev
            git rm -rf .
            git commit --allow-empty -m "chore: initialize gh-pages-dev branch"
            git push origin gh-pages-dev
          fi

      - name: Get commit hash of this build
        id: last_commit
        run: |
          echo "LAST_COMMIT=$(git rev-parse $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Clean previous artifacts for this version
        run: |
          ARTIFACTS=(
            "extensions/longhorn/${{ needs.extract-version.outputs.version }}"
            "charts/longhorn/${{ needs.extract-version.outputs.version }}"
            "assets/longhorn/longhorn-${{ needs.extract-version.outputs.version }}.tgz"
          )
          for f in "${ARTIFACTS[@]}"; do
            if [ -e "$f" ]; then
              rm -rf "$f"
            fi
          done

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: charts
          path: tmp

      - name: Copy artifacts to repo
        run: |
          cp -r tmp/* ./

      - name: Commit and push artifacts
        run: |
          git add ./{assets,charts,extensions,index.yaml}
          git commit -m "chore: build artifacts (commit: ${{ env.LAST_COMMIT }}, version: ${{ needs.extract-version.outputs.version }})" || echo "No changes to commit"
          git push origin gh-pages-dev

      - name: Run Helm chart releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: ./charts
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: true
