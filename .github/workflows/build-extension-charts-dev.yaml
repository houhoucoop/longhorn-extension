name: Build Extension Charts to Dev Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: gh-pages-dev

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Determine dev version
      - name: Determine version
        id: set_version
        run: |
          SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)
          BASE_VERSION=$(jq -r '.version' pkg/longhorn/package.json)
          VERSION="${BASE_VERSION}-dev.${SHORT_SHA}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      # 3. Bump package.json version
      - name: Bump package.json version
        run: |
          jq --arg v "$VERSION" '.version=$v' pkg/longhorn/package.json > pkg/longhorn/package.json.tmp
          mv pkg/longhorn/package.json.tmp pkg/longhorn/package.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pkg/longhorn/package.json
          git commit -m "chore: bump longhorn extension version to $VERSION" || echo "No changes to commit"

      # 4. Setup Node & Yarn
      - name: Setup Node & Yarn
        run: |
          corepack enable
          yarn install --frozen-lockfile

      # 5. Setup Helm
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.0

      # 6. Build Helm charts
      - name: Build Helm charts
        run: |
          yarn publish-pkgs -s ${{ github.repository }} -b ${{ env.TARGET_BRANCH }} -t longhorn-${{ env.VERSION }}

      # 7. Upload charts artifact
      - name: Upload charts artifact
        uses: actions/upload-artifact@v4
        with:
          name: charts
          path: tmp

      # 8. Push dev artifacts to gh-pages-dev
      - name: Push dev artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git clean -fd

          if git ls-remote --exit-code --heads origin ${{ env.TARGET_BRANCH }}; then
            git fetch origin ${{ env.TARGET_BRANCH }}
            git checkout -B ${{ env.TARGET_BRANCH }} origin/${{ env.TARGET_BRANCH }}
          else
            git checkout --orphan ${{ env.TARGET_BRANCH }}
            git rm -rf .
            git commit --allow-empty -m "chore: initialize ${{ env.TARGET_BRANCH }} branch"
            git push origin ${{ env.TARGET_BRANCH }}
          fi

          # Copy build artifacts
          mkdir -p tmp && cp -r tmp/* ./

          # Commit & push changes
          git add ./{assets,charts,extensions,index.yaml} || echo "Nothing to commit"
          git commit -m "Dev Build Artifacts, version: ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin HEAD:${{ env.TARGET_BRANCH }}

      # 9. Run Helm chart releaser
      - name: Run Helm chart releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: ./charts
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_SKIP_EXISTING: true
