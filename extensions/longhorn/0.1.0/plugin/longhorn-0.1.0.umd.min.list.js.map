{"version":3,"file":"longhorn-0.1.0.umd.min.list.js","mappings":"4XAkDiBA,EAAAC,YAAYC,UAAO,kBAAlCC,EAAAA,EAAAA,aAAsCC,EAAA,CAAAC,IAAA,yBACtCC,EAAAA,EAAAA,oBAEM,MAAAC,EAAA,EADJC,EAAAA,EAAAA,aAA+CC,EAAA,CAA/BC,KAAMC,EAAAD,KAAOE,OAAQC,EAAAD,Q,4EA9CzC,GACEE,KAAM,kBAENC,WAAY,CACVC,QAAO,IACPC,cAAaA,EAAAA,GAGfC,MAAO,CACLC,SAAU,CACRC,KAAMC,OACNC,UAAU,GAEZV,OAAQ,CACNQ,KAAMG,OACND,UAAU,IAId,WAAME,GACJ,MAAMC,EAAUC,KAAKC,OAAOC,QAAQ,kBAAkBH,QAChDI,EAAO,CACXC,aAAcJ,KAAKC,OAAOI,SAAS,GAAGN,YAAmB,CACvDL,KAAMM,KAAKP,WAEba,mBAAoBN,KAAKC,OAAOI,SAAS,GAAGN,SAAgB,CAC1DL,KAAMa,EAAAA,EAAmBC,SACzBC,GAAIC,EAAAA,EAAsBC,wBAGxBC,QAAYC,EAAAA,EAAAA,IAAQV,GAE1BH,KAAKhB,KAAO4B,EAAIR,YAClB,EAEAU,IAAAA,GACE,MAAO,CACL9B,KAAM,GAEV,G,WCxCF,MAAM+B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://longhorn-0.1.0/./list/longhorn.io.engineimage.vue","webpack://longhorn-0.1.0/./list/longhorn.io.engineimage.vue?583f"],"sourcesContent":["<script>\nimport Loading from \"@shell/components/Loading\";\nimport ResourceTable from \"@shell/components/ResourceTable\";\nimport { allHash } from \"@shell/utils/promise\";\nimport { LONGHORN_RESOURCES, LONGHORN_RESOURCE_IDS } from \"../types/resources\";\n\nexport default {\n  name: \"ListEngineImage\",\n\n  components: {\n    Loading,\n    ResourceTable,\n  },\n\n  props: {\n    resource: {\n      type: String,\n      required: true,\n    },\n    schema: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters[\"currentProduct\"].inStore;\n    const hash = {\n      engineImages: this.$store.dispatch(`${inStore}/findAll`, {\n        type: this.resource,\n      }),\n      defaultEngineImage: this.$store.dispatch(`${inStore}/find`, {\n        type: LONGHORN_RESOURCES.SETTINGS,\n        id: LONGHORN_RESOURCE_IDS.DEFAULT_ENGINE_IMAGE,\n      }),\n    };\n    const res = await allHash(hash);\n\n    this.rows = res.engineImages;\n  },\n\n  data() {\n    return {\n      rows: [],\n    };\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <ResourceTable :rows=\"rows\" :schema=\"schema\" />\n  </div>\n</template>\n","import { render } from \"./longhorn.io.engineimage.vue?vue&type=template&id=c709fb56\"\nimport script from \"./longhorn.io.engineimage.vue?vue&type=script&lang=js\"\nexport * from \"./longhorn.io.engineimage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_ctx","$fetchState","pending","_createBlock","_component_Loading","key","_createElementBlock","_hoisted_1","_createVNode","_component_ResourceTable","rows","$data","schema","$props","name","components","Loading","ResourceTable","props","resource","type","String","required","Object","fetch","inStore","this","$store","getters","hash","engineImages","dispatch","defaultEngineImage","LONGHORN_RESOURCES","SETTINGS","id","LONGHORN_RESOURCE_IDS","DEFAULT_ENGINE_IMAGE","res","allHash","data","__exports__","render"],"sourceRoot":""}